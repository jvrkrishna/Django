📘 Client–Server Architecture
1. What is Client–Server Architecture?
    🔹 A distributed application model.
    🔹 Splits tasks between clients and servers.
    🔹 Think of it as a conversation:

Client → asks questions (requests)
Server → gives answers (responses)

📖 Example:
    When you use a web browser (client) to open a website:
    Browser sends a request to the web server.
    Server processes the request, fetches data, and sends back a response.
    Browser then displays the web page to the user.

2. Client
    💻 A device or software application that sends requests to a server for resources/services.
    📱 Can be: web browsers, smartphones, tablets, desktop apps, or networked devices.
    🎨 Provides the interface for users to interact with the system.
    🖥️ Runs on the user’s local device.
    📡 Uses protocols like HTTP, HTTPS, WebSocket to communicate with servers.
    📥 Retrieves data from the server and displays it to users.
    🧩 Maintains temporary session information while users interact.

3. Server
    🖥️ A dedicated computer that serves multiple clients over a network.
    📡 Receives requests from clients and processes them.
    🤝 Can handle requests from multiple clients simultaneously.
    📤 Sends back responses after processing.
    
    🏷️ Types of servers:
        🌐 Web servers
        ⚙️ Application servers
        🗄️ Database servers
            ⏳ Designed to run 24/7, ensuring availability.
            ⚖️ Uses load balancing in large systems to distribute requests.
            📈 Scalability: add more servers or upgrade hardware to handle more traffic.
            🔒 Stores sensitive data securely.