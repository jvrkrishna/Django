📘 Web Server vs Application Server
🌐 Web Server
    📩 Primary role → Handle HTTP requests from clients (browsers). 
    📥 Sends static content (HTML, CSS, JS, images) directly to client without extra processing.
    🔀 If request requires dynamic content, forwards it to an Application Server.

✅ List of Popular Web Servers
    Apache HTTP Server (Apache)
    Nginx
    LiteSpeed
    Caddy
    Microsoft IIS
    CERN httpd

🎯 Roles of a Web Server
    📥 Handle HTTP requests from browsers.
    📂 Serve static content efficiently.
    🔀 Forward dynamic requests to application servers (acts as reverse proxy).
    📤 Send back responses after processing by application servers.
    ⚖️ Load balancing → distribute traffic across servers.
    🔒 SSL/TLS encryption for secure communication.
    🛡️ Prevent security attacks (DDoS, SQL Injection, XSS, CSRF, Brute Force, Phishing, MitM).
    ⚡ Caching → store frequently accessed content for speed.
    📝 Logging → record requests for monitoring & audits.

⚙️ Application Server
    📥 Receives forwarded requests from the web server.
    ⚡ Handles dynamic content generation (executing server-side scripts, business logic, database queries).
    📤 Sends processed content back to the web server, which then delivers it to the client.

✅ List of Popular Application Servers
    Gunicorn
    uWSGI
    Apache Tomcat
    GlassFish
    WildFly

🎯 Roles of an Application Server
    ⚡ Generate dynamic content → customized responses based on user input/data.
    👥 Handle concurrency → manage multiple requests at once smoothly.
    🗄️ Database interactions → fetch & store data as required.
    🔄 Session management → remember user actions & preferences.
    🔑 Authentication → verify user identity for secure access.
    🧩 Middleware integration → caching, logging, performance tuning.

✅ In short:
    🌐 Web Server → serves static files, forwards dynamic requests, manages traffic/security.
    ⚙️ Application Server → processes dynamic requests, business logic, database operations.