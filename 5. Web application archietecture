📘 Django Web Application Architecture (MVT)
🧱 Overview
    A Django web app follows the Model–View–Template (MVT) pattern with integrated components for:
        Handling requests
        Processing data
        Rendering responses
        Managing data storage

1. Client (Frontend / Browser)
    🌐 Sends HTTP requests to the server
    📥 Receives HTML/CSS/JS or JSON responses (for APIs)
Can be:
    Traditional Django-rendered HTML
    SPA (React, Vue, Angular, etc.)

2. Web Server (e.g., Nginx, Apache)
    Receives incoming client requests
    Forwards them to the WSGI application server

3. WSGI Server (e.g., Gunicorn, uWSGI)
    Acts as a bridge between the web server and Django
    Runs the Django app
    Sends back HTTP responses

4. Django Application (Core Components)
    🔗 URL Dispatcher (urls.py) → Maps URLs to views
    ⚙️ Views (views.py) → Handles request logic, communicates with models, returns responses (HTML/JSON)
    🗄️ Models (models.py) → Defines data structure, ORM maps to database tables
    🎨 Templates (templates/) → HTML files using Django template language, rendered by views
    📝 Forms (forms.py) → Input validation & rendering forms
    🧩 Middleware → Intercepts requests/responses (e.g., authentication, logging, security)

5. Database
    Supported: PostgreSQL, MySQL, SQLite, Oracle
    Managed via Django ORM (Object–Relational Mapping)

6. Static & Media Files
    Managed by Django staticfiles system
    Or stored externally (AWS S3, GCP Storage, etc.)
    🔁 Django Request–Response Cycle
    Client → Web Server (Nginx) → WSGI Server (Gunicorn/uWSGI) → Django
    ➡ URL Routing → View → Model → (Optional Template) → Response
    ➡ Sent back to Client

📦 Optional Components
    📨 Celery + Redis → Background tasks (emails, async jobs)
    🔌 Django REST Framework (DRF) → RESTful APIs
    🐳 Docker → Containerization
    🚀 CI/CD Tools → GitHub Actions, GitLab CI for deployment automation

📊 Sample Django Stack
Layer       	Technology
Frontend	    HTML/CSS + JS / React
Backend	        Django
Server	        Gunicorn + Nginx
Database	    PostgreSQL
Async Tasks	    Celery + Redis
Deployment	    Docker + AWS